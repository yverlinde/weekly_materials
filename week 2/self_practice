*** Expirement 1:
Changed the code of the first line of the second part on slide 22 for the first BH Algoritm example.
In the slides the first row of the code at the end of the slide is:
pval <- summary(spendy)$coef[-1, "Pr(>|t|)"]
I was interested in the use of the -1 in the code.
To learn what is does, I changed the -1 into -2: pval <- summary(spendy)$coef[-2, "Pr(>|t|)"].
When comparing the different outputs of p-values, I saw most of the output is identical, but the first specified 
p-value in the list is different from the one resulting from my code.
Also, the first presented p-value from the code including -1 is excluded in the list resulting from the code with -2 
and vice versa.
Therefore, I conclude the - followed by the number specifies which of the p-values to exclude from the list.

*** Expirement 2:
I wanted to learn what the numbers 2 and 1 do in the code on the third row on slide 22 of the first BH Algerithm 
example.
Specifically, the code in the slide I am pointing at is  reject <- ifelse(pval< (0.1/9)*pvalrank, 2, 1).
Here, I changed to 2 into 1 and 1 into a value of 0.
I examined the output of both codes and i observed all the numbers 2 changed into 1 and all the values of 1 became a 0.
So it became clear to me the difference is just a difference in labeling.
But it was not clear to me yet which of the value lables correponds to a significant p-value and which lable is 
attached to insignificant p-values in the BH algorithm because the 'adjusted targets' are not presented. 
Therefore, I calculated these by hand and compared them to the given p-values to determine the significant and 
insignificant signals.
After, I compared my results with the R output and concluded the second last number in the code is the lable for 
significant signals (which are the numbers 2 in the code belonging to the slides and the ones in my adjusted code) 
and the last number belongs to the insignificant p-values (the values 1 on the code as specified in the slides and 
the 0 values for my version of the code).

*** Expirement 3:
I was wondering wether the command colnames(dataset) could be adjusted to display the rownames instead of the
column names. 
This did I test by changing the colnames(email) command in slide 13 on the lecture slides on regression to  
rownames(email) and I run the command in R and applied it to the corresponding dataset.
Indeed it worked and I got the following output (... in row 44 indicating the pattern is the same for the here 
not diplayed rows):

  [1] "1"    "2"    "3"    "4"    "5"    "6"    "7"    "8"    "9"    "10"  
  [11] "11"   "12"   "13"   "14"   "15"   "16"   "17"   "18"   "19"   "20"  
  [21] "21"   "22"   "23"   "24"   "25"   "26"   "27"   "28"   "29"   "30"  
 ... 
 [971] "971"  "972"  "973"  "974"  "975"  "976"  "977"  "978"  "979"  "980" 
 [981] "981"  "982"  "983"  "984"  "985"  "986"  "987"  "988"  "989"  "990" 
 [991] "991"  "992"  "993"  "994"  "995"  "996"  "997"  "998"  "999"  "1000"
 [ reached getOption("max.print") -- omitted 3602 entries ]
What do I learn from this? 
The total number of rows in the dataset is 4602  which is mentionned not in the output of the command,
but in the bar just below the data frame.
There are 3602 omitted entries, the incomplete observations I assume and 1000 is the maximum number 
stated in the output and together (3602 + 1000) this exactly counts up to the total number of rows.
So the numbers within brackets do not represent the right amount of row numbers, but the individual numbers
between parentheses display the row numbers.
